#include <Arduino.h>
#include <IRremoteESP8266.h>
#include <IRsend.h>

const uint16_t kIrLed = 15;  // ESP32 GPIO pin 15 

IRsend irsend(kIrLed);  // Set the GPIO to be used to sending the message.

// rawData para desligar o ar condicionado
uint16_t rawData[199] = {4356, 4418,  516, 1650,  490, 606,  488, 1652,  514, 1652,  514, 556,  488, 606,  490, 1652,  490, 606,  488, 580,  490, 1676,  490, 580,  490, 608,  488, 1650,  490, 1678,  490, 580,  514, 1654,  488, 580,  514, 1652,  490, 1652,  488, 1678,  490, 1676,  514, 556,  490, 1676,  514, 1628,  512, 1654,  488, 582,  490, 606,  514, 556,  490, 606,  490, 1652,  490, 606,  514, 556,  490, 1676,  514, 1626,  488, 1678,  514, 556,  514, 582,  514, 556,  488, 606,  490, 580,  490, 606,  490, 580,  514, 556,  540, 1626,  514, 1652,  514, 1628,  514, 1652,  514, 1626,  514, 5204,  4354, 4418,  518, 1650,  514, 582,  514, 1626,  512, 1654,  514, 556,  514, 582,  514, 1626,  514, 582,  514, 554,  490, 1676,  514, 554,  514, 582,  514, 1626,  514, 1652,  514, 554,  514, 1652,  514, 556,  540, 1628,  512, 1652,  514, 1626,  514, 1654,  490, 580,  514, 1650,  490, 1650,  490, 1676,  490, 606,  490, 580,  490, 580,  490, 606,  490, 1650,  492, 604,  490, 580,  490, 1676,  490, 1676,  492, 1650,  490, 606,  492, 578,  490, 580,  490, 606,  490, 580,  490, 606,  490, 580,  490, 604,  490, 1652,  490, 1676,  490, 1650,  490, 1676,  490, 1676,  490};  // COOLIX B27BE0

void setup() {
  irsend.begin();
#if ESP8266
  Serial.begin(115200, SERIAL_8N1, SERIAL_TX_ONLY);
#else  // ESP8266
  Serial.begin(115200, SERIAL_8N1);
#endif  // ESP8266
}

void loop() {
  Serial.println("RawData");
  irsend.sendRaw(rawData, 199, 38);  // Send a raw data capture at 38kHz.
  Serial.println("CÃ³digo enviado");
  delay(2000);
}
